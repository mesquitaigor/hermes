(globalThis.webpackChunktest_2=globalThis.webpackChunktest_2||[]).push([[540],{"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/noSourceMaps.js":module=>{"use strict";module.exports=function(i){return i[1]}},"./src/app/shared/components/molecules/password-level-popup/components/password-requisite-item/status-item-list.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>status_item_list_stories});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var status_item_list_componentngResource=__webpack_require__("./src/app/shared/components/molecules/password-level-popup/components/password-requisite-item/status-item-list.component.scss?ngResource"),status_item_list_componentngResource_default=__webpack_require__.n(status_item_list_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let StatusItemListComponent=class StatusItemListComponent{static#_=this.propDecorators={popupController:[{type:core.Input}]}};StatusItemListComponent=(0,tslib_es6.UN)([(0,core.Component)({selector:"status-item-list",template:'<ng-container *ngIf="popupController">\n  <div class="password-requisite-item">\n    <ng-container *ngFor="let rule of popupController.rules">\n      <ng-container *ngIf="(rule.state$ | async) as rulestate">\n        <div class="require-password-item" [class.ok]="rulestate.isOk">\n          <div class="status-item-circle"></div>\n          <p>{{ rulestate.label }}</p>\n        </div>\n      </ng-container>\n    </ng-container>\n  </div>\n</ng-container>\n',styles:[status_item_list_componentngResource_default()]})],StatusItemListComponent);const status_item_list_component=StatusItemListComponent;var BehaviorSubject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/BehaviorSubject.js");class PasswordRule{constructor(props){this._label="",this._condition=()=>!1,this._levelText="",this._applied=!1,this.state$=new BehaviorSubject.g(this.simpleStructure()),this._label=props.label,this._condition=props.condition,this._levelText=props.levelText,this._applied=props.ruleApplied||!1,this.next()}getLabel(){return this._label}getLevelText(){return this._levelText}isApplied(){return this._applied}simpleStructure(){return{label:this._label,isOk:this._applied}}next(){this.state$.next(this.simpleStructure())}updateStatus(){this._applied=this._condition(),this.next()}}const model3=new class PasswordLevelPopup{constructor(){this.show=!1,this.firstLabel="",this.rules=[]}onChanges(){return this.passwordInput?.valueChanges}getRuleAppliedLength(){return this.rules.filter((rule=>rule.isApplied())).length}setPopupController(controller){this.controller=controller}getPopupController(){return this.controller}getRulesLabel(){return this.rules.map((rule=>rule.getLabel()))}atualizeRulesStatus(){this.rules.forEach((rule=>{rule.updateStatus()}))}getCurrentLevelLabel(currentLevel){return this.rules[currentLevel-1]?.getLevelText()}setPasswordInput(control){this.passwordInput=control}getPasswordInput(){return this.passwordInput}changeProgress(action){this.controller?.changeProgressBar(action)}getProgressBar(){return this.controller?.getProgressBar()}pristineInputRuleCondition(errorName){return!this.passwordInput?.errors?.[errorName]&&!this.passwordInput?.pristine}},rule1=new PasswordRule({label:"Item 1",condition:()=>!0,levelText:""}),rule2=new PasswordRule({label:"Item 2",condition:()=>!0,levelText:""}),rule3=new PasswordRule({label:"Item 3",condition:()=>!0,levelText:""});model3.rules.push(rule1),model3.rules.push(rule2),model3.rules.push(rule3);const status_item_list_stories={title:"Molecule/Status Item List",component:status_item_list_component,argTypes:{popupController:{name:"Controller",description:"Controller to show the password rules",mapping:{Default:model3}}},tags:["autodocs"],parameters:{layout:"fullscreen",docs:{description:{component:"Component to show a list with a label and your status"}}}},Default={args:{popupController:model3},render:args=>({props:{...args,popupController:model3},template:'\n      <div style="padding: 15px; background: white">\n        <status-item-list [popupController]="popupController"></status-item-list>\n      </div>\n    '})};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    popupController: model3\n  },\n  render: (args: StatusItemListComponent) => ({\n    props: {\n      ...args,\n      popupController: model3\n    },\n    template: `\n      <div style="padding: 15px; background: white">\n        <status-item-list [popupController]="popupController"></status-item-list>\n      </div>\n    `\n  })\n}',...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]},"./src/app/shared/components/molecules/password-level-popup/components/password-requisite-item/status-item-list.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,".password-requisite-item .require-password-item {\n  font-size: 12px;\n  opacity: 0.8;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n}\n.password-requisite-item .require-password-item.ok {\n  color: #16a487;\n}\n.password-requisite-item .require-password-item.ok .status-item-circle {\n  background-color: #16a487;\n}\n.password-requisite-item .require-password-item .status-item-circle {\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: #ed2860;\n  margin-right: 10px;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);